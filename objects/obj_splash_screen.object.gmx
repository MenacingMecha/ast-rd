<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Defning initial variables

// Gamepad deadzone
gamepad_set_axis_deadzone(0,0.4);

// Set default window scale
global.window_scaleh[1] = window_get_width();
global.window_scalev[1] = window_get_height();

// TODO: figure out how to get array multiplication working correctly to support more scaling options
global.window_scaleh[2] = window_get_width() * 2;
global.window_scalev[2] = window_get_height() * 2;

//for(i = 2; i &lt;= 4; i += 1)
//{
//    global.window_scaleh[i] = global.window_scaleh[1] * i;
//    global.window_scaleh[i] = global.window_scalev[1] * i;
//}

// By default, set the title screen to be drawn
// Deactivate for menus where the logo would end up overlapping some of the options
global.draw_title_screen = true;

// Defining timer for splash screen message
splash_screen_timer = 0;

global.player_respawn_invul = false;
global.smooth_scaling = false;
global.in_fullscreen = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ROM OK RAM OK splash screen
// Setting up the font
draw_set_halign(fa_left);
draw_set_valign(fa_middle);
//draw_set_font(fnt_options);
draw_set_color(c_white);

// Incrementing timer
splash_screen_timer += 1;

// React to timer
// Finish splash screen if timer is finished
if(splash_screen_timer &gt;= 180)
{
    room_goto_next();
}

// ROM OK
// RAM OK
else if(splash_screen_timer &gt;= 120)
{
    draw_text(0,y, "ROM   OK");
    draw_text(0,y+20, "RAM   OK");
}

// ROM OK
// RAM
else if(splash_screen_timer &gt;= 60)
{
    draw_text(0,y, "ROM   OK");
    draw_text(0,y+20, string("RAM"));
}

// ROM
// RAM
else
{
    draw_text(0, y, "ROM");
    draw_text(0, y+20, "RAM");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
