<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Changing direction to face upwards - feels more natural than facing right
direction = 90;
image_angle = 90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls
var key_left = -(keyboard_check(vk_left) || keyboard_check(ord("A")) || (gamepad_button_check(0,gp_padl)) || (gamepad_axis_value(0,gp_axislh) &lt; 0));
var key_right = keyboard_check(vk_right) || keyboard_check(ord("D")) || (gamepad_button_check(0,gp_padr)) || (gamepad_axis_value(0,gp_axislh) &gt; 0);
var key_up = keyboard_check(vk_up) || keyboard_check(ord("W")) || (gamepad_button_check(0,gp_padu)) || (gamepad_axis_value(0,gp_axislv) &lt; 0);
var key_fire = keyboard_check_pressed(ord("Z")) || keyboard_check(vk_space) || (gamepad_button_check_pressed(0,gp_face1));
var key_sprint = keyboard_check(vk_shift) || keyboard_check(ord("X"));


// Rotate left and right
if(key_sprint == 1)
{
    var rotation_multi = 2;
}
else
{
    var rotation_multi = 1;
}

var rotation_rate = 2;
var hmove = -((key_left + key_right) * (rotation_rate * rotation_multi));
image_angle = image_angle + hmove;

// Increase thrust in the current direction
if(key_up == 1)
{
motion_add(image_angle, 0.1);
}

// Set a maximum limit on speed while allowing the play to turn
if(speed &gt; 2.5)
{
speed = 2.5;
}

// Simulate friction, slowly decreasing speed until it reaches 0
speed = max(speed - 0.01, 0);


// Fire bullet
if(key_fire == 1)
{
    // Fire bullet if there isn't already 3
    if(instance_number(obj_bullet) != 3)
    {
        bullet = instance_create(self.x,self.y,obj_bullet);
        audio_play_sound(snd_shoot,0,0);
        
        // Adjust direction, sprite angle and speed to fire
        bullet.direction = image_angle;
        bullet.image_angle = image_angle;
        bullet.speed = 5;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>112</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_wrap</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
